@model DateTime?

@{
    var templateHelper = new BootstrapExtensionsMVC.Helpers.EditorTemplateHelper(ViewBag);

    //datetimepicker", data_date_format = "MM/DD/YYYY", data_date_show_today_button = "true", data_date_show_clear = "true" });
    templateHelper.InputHtmlAttributes["class"] += " datetimepicker";
    templateHelper.InputHtmlAttributes["data-date-format"] = "h:mm A";
    templateHelper.InputHtmlAttributes["data-date-show-clear"] = "true";
}

<div class="form-group @templateHelper.FormGroupCssClass @(Html.ValidationErrorFor(m => m, " has-error"))">

    @{
        if (string.IsNullOrEmpty(templateHelper.LabelCssClass))
        {
            @Html.Raw("<div class=\"col-md-12\">");
        @Html.LabelFor(m => m, templateHelper.LabelHtmlAttributes);
        }
        else
        {
            @Html.LabelFor(m => m, templateHelper.LabelHtmlAttributes);
        @Html.Raw("<div class=\"" + @templateHelper.FieldCssClass + "\">");
        }

        @Html.TextBoxFor(m => m, templateHelper.InputHtmlAttributes);
        @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" });

        @Html.Raw("</div>");
    }
</div>
