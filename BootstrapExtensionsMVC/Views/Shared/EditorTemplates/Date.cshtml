@model DateTime?

@{
    var templateHelper = new BootstrapExtensionsMVC.Helpers.EditorTemplateHelper(ViewBag.formGroupSize, ViewBag.labelWidth);
}

<div class="form-group @templateHelper.FormGroupCssClass @(Html.ValidationErrorFor(m => m, " has-error"))">

    @{
        if (string.IsNullOrEmpty(templateHelper.LabelCssClass))
        {
            @Html.Raw("<div class=\"col-md-12\">");
            @Html.LabelFor(m => m, new { @class = "control-label " + templateHelper.LabelCssClass });
        }
        else
        {
            @Html.LabelFor(m => m, new { @class = "control-label " + templateHelper.LabelCssClass });
            @Html.Raw("<div class=\"" + @templateHelper.FieldCssClass + "\">");
        }

        @Html.TextBoxFor(m => m, new { @class = "form-control datetimepicker", data_date_format = "MM/DD/YYYY", data_date_show_today_button = "true", data_date_show_clear = "true" });
        @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" });

        @Html.Raw("</div>");
    }
</div>

@*<div class="form-group @(Html.ValidationErrorFor(m => m, " has-error"))">
    @Html.LabelFor(m => m, new { @class = "control-label col-md-3" })
    <div class="col-md-9">
        @Html.TextBoxFor(m => m, new { @class = "form-control datepicker", data_date_format="MM/DD/YYYY", data_date_show_today_button="true", data_date_show_clear="true" })
        @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" })
    </div>
</div>*@

@*data-date-format="YYYY/MM/DD HH:mm" data-date-show-today-button="true" data-date-show-clear="true"*@