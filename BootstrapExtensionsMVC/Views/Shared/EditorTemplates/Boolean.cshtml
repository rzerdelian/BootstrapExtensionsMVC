@model Boolean

@{
    var templateHelper = new BootstrapExtensionsMVC.Helpers.EditorTemplateHelper(ViewBag.formGroupSize, ViewBag.labelWidth);
    var checkboxStyle = ViewBag.checkboxStyle;
}

<div class="form-group @templateHelper.FormGroupCssClass @(Html.ValidationErrorFor(m => m, " has-error"))">

    @{
        if (string.IsNullOrEmpty(templateHelper.LabelCssClass))
        {
            @Html.Raw("<div class=\"col-md-12\">")    ;
            @Html.Raw("<div class=\"checkbox " + checkboxStyle + "\">");
                
                @*@Html.Raw("&nbsp; &nbsp;")*@
                @Html.CheckBoxFor(m => m) ;
                                          @Html.LabelFor(m => m, new { @class = "control-label " + templateHelper.LabelCssClass });
            @Html.Raw("</div>");
        }
        else
        {
         @Html.LabelFor(m => m, new { @class = "control-label " + templateHelper.LabelCssClass }) 
         @Html.Raw("<div class=\"" + @templateHelper.FieldCssClass + " checkbox " + checkboxStyle + " \">") 
         @Html.Raw("&nbsp; &nbsp;") 
         @Html.CheckBoxFor(m => m) 
            <label></label>
        }


        @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" });

        @Html.Raw("</div>");
    }
</div>

@*@{
    
    var checkboxStyle = ViewBag.checkboxStyle;
    
    
}

<div class="form-group @(Html.ValidationErrorFor(m => m, " has-error"))">
    @Html.LabelFor(m => m, new { @class = "control-label col-md-3" })
    <div class="col-md-9 checkbox @checkboxStyle">
        &nbsp;&nbsp;
        @Html.CheckBoxFor(m=> m)
        <label></label>
        @Html.ValidationMessageFor(m => m, null, new { @class = "text-danger" })
    </div>
</div>*@
